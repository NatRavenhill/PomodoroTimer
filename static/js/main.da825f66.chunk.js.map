{"version":3,"sources":["components/BreakLength.jsx","components/SessionLength.jsx","components/Tomato.jsx","components/Session.jsx","App.js","reportWebVitals.js","index.js"],"names":["BreakLength","props","handleBreakIncrement","handleBreakDecrement","breakLength","className","id","onClick","icon","faMinusCircle","size","faPlusCircle","SessionLength","handleSessionDecrement","handleSessionIncrement","sessionLength","Tomato","handleReset","handleStartStop","minutes","seconds","toString","padStart","faPlay","color","faPause","faRedo","Session","defaultState","isRunning","timerLabel","isBreak","state","setSessionLength","setBreakLength","newSessionLength","setState","newBreakLength","beepRef","current","load","tick","play","handleBreakTime","setTimeout","bind","React","createRef","scriptTag","document","createElement","src","async","body","appendChild","this","ref","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.da825f66.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction BreakLength(props) {\r\n  const { handleBreakIncrement, handleBreakDecrement, breakLength } = props;\r\n  \r\n  return (\r\n    <div className=\"Break-length\">\r\n      <h2 id=\"break-label\">Break Length</h2>\r\n      <h3 id=\"break-length\">{breakLength}</h3>\r\n      <button id=\"break-decrement\" onClick={handleBreakDecrement}>\r\n        <FontAwesomeIcon icon={faMinusCircle} size=\"2x\" />\r\n      </button>\r\n      <button id=\"break-increment\" onClick={handleBreakIncrement}>\r\n        <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BreakLength;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction SessionLength(props) {\r\n  const { handleSessionDecrement, handleSessionIncrement, sessionLength } = props\r\n\r\n  return (\r\n    <div className=\"Session-length\">\r\n      <h2 id=\"session-label\">Session Length</h2>\r\n      <h3 id=\"session-length\">{sessionLength}</h3>\r\n      <button id=\"session-decrement\" onClick={handleSessionDecrement}>\r\n        <FontAwesomeIcon icon={faMinusCircle} size=\"2x\" />\r\n      </button>\r\n      <button id=\"session-increment\" onClick={handleSessionIncrement}>\r\n        <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SessionLength;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faPause, faRedo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Tomato.css\";\r\n\r\nfunction Tomato (props) {\r\n  const { handleReset, handleStartStop, minutes, seconds } = props;\r\n\r\n  return (\r\n    <div className=\"tomato\">\r\n      <p id=\"time-left\">\r\n        {minutes.toString().padStart(2, \"0\")}:\r\n        {seconds.toString().padStart(2, \"0\")}\r\n      </p>\r\n      <button id=\"start_stop\" onClick={handleStartStop}>\r\n        <FontAwesomeIcon icon={faPlay} color=\"#FDE9B0\" size=\"2x\" />\r\n        <FontAwesomeIcon icon={faPause} color=\"#FDE9B0\" size=\"2x\" />\r\n      </button>\r\n      <button id=\"reset\" onClick={handleReset}>\r\n        <FontAwesomeIcon icon={faRedo} color=\"#FDE9B0\" size=\"2x\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tomato;\r\n","import React, { Component } from \"react\";\r\nimport \"./Session.css\";\r\nimport BreakLength from \"./BreakLength\";\r\nimport SessionLength from './SessionLength';\r\nimport Tomato from './Tomato';\r\n\r\nclass Session extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = this.defaultState();\r\n    this.tick = this.tick.bind(this);\r\n    this.handleBreakTime = this.handleBreakTime.bind(this);\r\n    this.setBreakLength = this.setBreakLength.bind(this);\r\n    this.setSessionLength = this.setSessionLength.bind(this);\r\n\r\n    this.beepRef = React.createRef();\r\n  }\r\n\r\n  defaultState = () => {\r\n    return {\r\n      breakLength: 5,\r\n      sessionLength: 25,\r\n      isRunning: false,\r\n      seconds: 0,\r\n      minutes: 25,\r\n      timerLabel: \"Session\",\r\n      isBreak: false,\r\n    };\r\n  };\r\n\r\n  // Add FCC test script\r\n  componentWillMount() {\r\n    const scriptTag = document.createElement(\"script\");\r\n    scriptTag.src =\r\n      \"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\";\r\n    scriptTag.async = true;\r\n    document.body.appendChild(scriptTag);\r\n  }\r\n\r\n  handleSessionIncrement = () => {\r\n    if (this.state.sessionLength < 60) {\r\n      this.setSessionLength(this.state.sessionLength + 1);\r\n    }\r\n  };\r\n\r\n  handleSessionDecrement = () => {\r\n    if (this.state.sessionLength > 1) {\r\n      this.setSessionLength(this.state.sessionLength - 1);\r\n    }\r\n  };\r\n\r\n  handleBreakIncrement = () => {\r\n    if (this.state.breakLength < 60) {\r\n      this.setBreakLength(this.state.breakLength + 1);\r\n    }\r\n  };\r\n\r\n  handleBreakDecrement = () => {\r\n    if (this.state.breakLength > 1) {\r\n      this.setBreakLength(this.state.breakLength - 1);\r\n    }\r\n  };\r\n\r\n  setSessionLength = (newSessionLength) => {\r\n    if (this.state.isBreak) {\r\n      this.setState({\r\n        sessionLength: newSessionLength,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        sessionLength: newSessionLength,\r\n        minutes: newSessionLength,\r\n        seconds: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  setBreakLength = (newBreakLength) => {\r\n    if (this.state.isBreak) {\r\n      this.setState({\r\n        breakLength: newBreakLength,\r\n        minutes: newBreakLength,\r\n        seconds: 0,\r\n      });\r\n    } else {\r\n      this.setState({ breakLength: newBreakLength });\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.beepRef.current.load();\r\n    this.setState(this.defaultState());\r\n  };\r\n\r\n  tick = () => {\r\n    if (!this.state.isRunning) return;\r\n\r\n    if (this.state.seconds > 0) {\r\n      this.setState((state) => ({\r\n        seconds: state.seconds - 1,\r\n      }));\r\n    } else if (this.state.minutes > 0) {\r\n      this.setState((state) => ({\r\n        minutes: state.minutes - 1,\r\n        seconds: 59,\r\n      }));\r\n    } else {\r\n      this.beepRef.current.play();\r\n      this.handleBreakTime();\r\n    }\r\n\r\n    setTimeout(this.tick, 1000);\r\n  };\r\n\r\n  handleBreakTime = () => {\r\n    if (this.state.isBreak) {\r\n      this.setState({\r\n        isRunning: true,\r\n        seconds: 0,\r\n        minutes: this.state.sessionLength,\r\n        timerLabel: \"Session\",\r\n        isBreak: false,\r\n      });\r\n    } else {\r\n      this.setState((state) => ({\r\n        isBreak: true,\r\n        timerLabel: \"Break\",\r\n        minutes: state.breakLength,\r\n        seconds: 0,\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleStartStop = () => {\r\n    if (this.state.isRunning) {\r\n      this.setState({\r\n        isRunning: false,\r\n      });\r\n    } else {\r\n      this.setState(\r\n        {\r\n          isRunning: true,\r\n        },\r\n        this.tick\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 id=\"timer-label\">{this.state.timerLabel}</h1>\r\n        <Tomato handleStartStop={this.handleStartStop}\r\n          handleReset={this.handleReset}\r\n          minutes={this.state.minutes}\r\n          seconds={this.state.seconds}\r\n        />\r\n        <div className=\"gridClass\">\r\n          <BreakLength\r\n            handleBreakDecrement={this.handleBreakDecrement}\r\n            handleBreakIncrement={this.handleBreakIncrement}\r\n            breakLength={this.state.breakLength}\r\n          />\r\n          <SessionLength\r\n            handleSessionDecrement={this.handleSessionDecrement}\r\n            handleSessionIncrement={this.handleSessionIncrement}\r\n            sessionLength={this.state.sessionLength}\r\n          />\r\n        </div>\r\n        <audio\r\n          id=\"beep\"\r\n          ref={this.beepRef}\r\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Session;\r\n","import \"./App.css\";\r\nimport Session from \"./components/Session\";\r\n\r\nfunction App() {\r\n  return <Session />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}