{"version":3,"sources":["Session.jsx","App.js","reportWebVitals.js","index.js"],"names":["Session","defaultState","breakLength","sessionLength","isRunning","seconds","minutes","timerLabel","isBreak","handleSessionIncrement","state","setSessionLength","handleSessionDecrement","handleBreakIncrement","setBreakLength","handleBreakDecrement","newSessionLength","setState","newBreakLength","handleReset","beepRef","current","load","tick","play","handleBreakTime","setTimeout","handleStartStop","bind","React","createRef","scriptTag","document","createElement","src","async","body","appendChild","className","id","this","toString","padStart","onClick","icon","faPlay","color","size","faPause","faRedo","faMinusCircle","faPlusCircle","ref","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3dc2af6f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Session.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faPause, faRedo, faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass Session extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = this.defaultState();\r\n    this.tick = this.tick.bind(this);\r\n    this.handleBreakTime = this.handleBreakTime.bind(this);\r\n    this.setBreakLength = this.setBreakLength.bind(this);\r\n    this.setSessionLength = this.setSessionLength.bind(this);\r\n\r\n    this.beepRef = React.createRef();\r\n  }\r\n\r\n  defaultState = () => {\r\n    return {\r\n      breakLength: 5,\r\n      sessionLength: 25,\r\n      isRunning: false,\r\n      seconds: 0,\r\n      minutes: 25,\r\n      timerLabel: \"Session\",\r\n      isBreak: false,\r\n    };\r\n  };\r\n\r\n  // Add FCC test script\r\n  componentWillMount() {\r\n    const scriptTag = document.createElement(\"script\");\r\n    scriptTag.src =\r\n      \"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\";\r\n    scriptTag.async = true;\r\n    document.body.appendChild(scriptTag);\r\n  }\r\n\r\n  handleSessionIncrement = () => {\r\n    if (this.state.sessionLength < 60) {\r\n      this.setSessionLength(this.state.sessionLength + 1);\r\n    }\r\n  };\r\n\r\n  handleSessionDecrement = () => {\r\n    if (this.state.sessionLength > 1) {\r\n      this.setSessionLength(this.state.sessionLength - 1);\r\n    }\r\n  };\r\n\r\n  handleBreakIncrement = () => {\r\n    if (this.state.breakLength < 60) {\r\n      this.setBreakLength(this.state.breakLength + 1);\r\n    }\r\n  };\r\n\r\n  handleBreakDecrement = () => {\r\n    if (this.state.breakLength > 1) {\r\n      this.setBreakLength(this.state.breakLength - 1);\r\n    }\r\n  };\r\n\r\n  setSessionLength = (newSessionLength) => {\r\n    if (this.state.isBreak) {\r\n      this.setState({\r\n        sessionLength: newSessionLength,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        sessionLength: newSessionLength,\r\n        minutes: newSessionLength,\r\n        seconds: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  setBreakLength = (newBreakLength) => {\r\n    if (this.state.isBreak) {\r\n      this.setState({\r\n        breakLength: newBreakLength,\r\n        minutes: newBreakLength,\r\n        seconds: 0,\r\n      });\r\n    } else {\r\n      this.setState({ breakLength: newBreakLength });\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.beepRef.current.load();\r\n    this.setState(this.defaultState());\r\n  };\r\n\r\n  tick = () => {\r\n    if (!this.state.isRunning) return;\r\n\r\n    if (this.state.seconds > 0) {\r\n      this.setState((state) => ({\r\n        seconds: state.seconds - 1,\r\n      }));\r\n    } else if (this.state.minutes > 0) {\r\n      this.setState((state) => ({\r\n        minutes: state.minutes - 1,\r\n        seconds: 59,\r\n      }));\r\n    } else {\r\n      this.beepRef.current.play();\r\n      this.handleBreakTime();\r\n    }\r\n\r\n    setTimeout(this.tick, 1000);\r\n  };\r\n\r\n  handleBreakTime = () => {\r\n    if (this.state.isBreak) {\r\n      this.setState({\r\n        isRunning: true,\r\n        seconds: 0,\r\n        minutes: this.state.sessionLength,\r\n        timerLabel: \"Session\",\r\n        isBreak: false,\r\n      });\r\n    } else {\r\n      this.setState((state) => ({\r\n        isBreak: true,\r\n        timerLabel: \"Break\",\r\n        minutes: state.breakLength,\r\n        seconds: 0,\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleStartStop = () => {\r\n    if (this.state.isRunning) {\r\n      this.setState({\r\n        isRunning: false,\r\n      });\r\n    } else {\r\n      this.setState(\r\n        {\r\n          isRunning: true,\r\n        },\r\n        this.tick\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 id=\"timer-label\">{this.state.timerLabel}</h1>\r\n        <div className=\"tomato\">\r\n          <p id=\"time-left\">\r\n            {this.state.minutes.toString().padStart(2, \"0\")}:\r\n            {this.state.seconds.toString().padStart(2, \"0\")}\r\n          </p>\r\n          <button id=\"start_stop\" onClick={this.handleStartStop.bind(this)}>\r\n            <FontAwesomeIcon icon={faPlay} color='#FDE9B0' size='2x'/>\r\n            <FontAwesomeIcon icon={faPause} color='#FDE9B0' size='2x'/>\r\n          </button>\r\n          <button id=\"reset\" onClick={this.handleReset.bind(this)}>\r\n            <FontAwesomeIcon icon={faRedo} color='#FDE9B0'  size=\"2x\"/>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"gridClass\">\r\n          <div className=\"Break-length\">\r\n            <h2 id=\"break-label\">Break Length</h2>\r\n            <h3 id=\"break-length\">{this.state.breakLength}</h3>\r\n            <button\r\n              id=\"break-decrement\"\r\n              onClick={this.handleBreakDecrement.bind(this)}\r\n            >\r\n              <FontAwesomeIcon icon={faMinusCircle} size=\"2x\"/>\r\n            </button>\r\n            <button\r\n              id=\"break-increment\"\r\n              onClick={this.handleBreakIncrement.bind(this)}\r\n            >\r\n              <FontAwesomeIcon icon={faPlusCircle} size=\"2x\"/>\r\n            </button>\r\n          </div>\r\n          <div className=\"Session-length\">\r\n            <h2 id=\"session-label\">Session Length</h2>\r\n            <h3 id=\"session-length\">{this.state.sessionLength}</h3>\r\n            <button\r\n              id=\"session-decrement\"\r\n              onClick={this.handleSessionDecrement.bind(this)}\r\n            >\r\n             <FontAwesomeIcon icon={faMinusCircle} size=\"2x\"/>\r\n            </button>\r\n            <button\r\n              id=\"session-increment\"\r\n              onClick={this.handleSessionIncrement.bind(this)}\r\n            >\r\n              <FontAwesomeIcon icon={faPlusCircle} size=\"2x\"/>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <audio\r\n          id=\"beep\"\r\n          ref={this.beepRef}\r\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Session;\r\n","import \"./App.css\";\r\nimport Session from \"./Session\";\r\n\r\nfunction App() {\r\n  return <Session />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}