{"version":3,"sources":["components/LengthChanger.jsx","components/Tomato.jsx","components/Session.jsx","App.js","reportWebVitals.js","index.js"],"names":["LengthChanger","props","name","classname","handleDecrement","handleIncrement","length","label","className","id","onClick","icon","faMinusCircle","size","faPlusCircle","Tomato","handleReset","handleStartStop","minutes","seconds","toString","padStart","faPlay","color","faPause","faRedo","Session","defaultState","breakLength","sessionLength","isRunning","timerLabel","isBreak","handleSessionIncrement","state","setSessionLength","handleSessionDecrement","handleBreakIncrement","setBreakLength","handleBreakDecrement","newSessionLength","setState","newBreakLength","beepRef","current","load","tick","play","handleBreakTime","setTimeout","bind","React","createRef","scriptTag","document","createElement","src","async","body","appendChild","this","ref","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.38e118f5.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction LengthChanger(props) {\r\n  const { name, classname, handleDecrement, handleIncrement, length, label } = props\r\n\r\n  return (\r\n    <div className={classname}>\r\n      <h2 id={name + '-label'}>{label}</h2>\r\n      <h3 id={name + '-length'}>{length}</h3>\r\n      <button id={name + '-decrement'} onClick={handleDecrement}>\r\n        <FontAwesomeIcon icon={faMinusCircle} size=\"2x\" />\r\n      </button>\r\n      <button id={name + '-increment'} onClick={handleIncrement}>\r\n        <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LengthChanger;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faPause, faRedo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Tomato.css\";\r\n\r\nfunction Tomato (props) {\r\n  const { handleReset, handleStartStop, minutes, seconds } = props;\r\n\r\n  return (\r\n    <div className=\"tomato\">\r\n      <p id=\"time-left\">\r\n        {minutes.toString().padStart(2, \"0\")}:\r\n        {seconds.toString().padStart(2, \"0\")}\r\n      </p>\r\n      <button id=\"start_stop\" onClick={handleStartStop}>\r\n        <FontAwesomeIcon icon={faPlay} color=\"#FDE9B0\" size=\"2x\" />\r\n        <FontAwesomeIcon icon={faPause} color=\"#FDE9B0\" size=\"2x\" />\r\n      </button>\r\n      <button id=\"reset\" onClick={handleReset}>\r\n        <FontAwesomeIcon icon={faRedo} color=\"#FDE9B0\" size=\"2x\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tomato;\r\n","import React, { Component } from \"react\";\r\nimport \"./Session.css\";\r\nimport LengthChanger from './LengthChanger';\r\nimport Tomato from './Tomato';\r\n\r\nclass Session extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = this.defaultState();\r\n    this.tick = this.tick.bind(this);\r\n    this.handleBreakTime = this.handleBreakTime.bind(this);\r\n    this.setBreakLength = this.setBreakLength.bind(this);\r\n    this.setSessionLength = this.setSessionLength.bind(this);\r\n\r\n    this.beepRef = React.createRef();\r\n  }\r\n\r\n  defaultState = () => {\r\n    return {\r\n      breakLength: 5,\r\n      sessionLength: 25,\r\n      isRunning: false,\r\n      seconds: 0,\r\n      minutes: 25,\r\n      timerLabel: \"Session\",\r\n      isBreak: false,\r\n    };\r\n  };\r\n\r\n  // Add FCC test script\r\n  componentWillMount() {\r\n    const scriptTag = document.createElement(\"script\");\r\n    scriptTag.src =\r\n      \"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\";\r\n    scriptTag.async = true;\r\n    document.body.appendChild(scriptTag);\r\n  }\r\n\r\n  handleSessionIncrement = () => {\r\n    if (this.state.sessionLength < 60) {\r\n      this.setSessionLength(this.state.sessionLength + 1);\r\n    }\r\n  };\r\n\r\n  handleSessionDecrement = () => {\r\n    if (this.state.sessionLength > 1) {\r\n      this.setSessionLength(this.state.sessionLength - 1);\r\n    }\r\n  };\r\n\r\n  handleBreakIncrement = () => {\r\n    if (this.state.breakLength < 60) {\r\n      this.setBreakLength(this.state.breakLength + 1);\r\n    }\r\n  };\r\n\r\n  handleBreakDecrement = () => {\r\n    if (this.state.breakLength > 1) {\r\n      this.setBreakLength(this.state.breakLength - 1);\r\n    }\r\n  };\r\n\r\n  setSessionLength = (newSessionLength) => {\r\n    if (this.state.isBreak) {\r\n      this.setState({\r\n        sessionLength: newSessionLength,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        sessionLength: newSessionLength,\r\n        minutes: newSessionLength,\r\n        seconds: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  setBreakLength = (newBreakLength) => {\r\n    if (this.state.isBreak) {\r\n      this.setState({\r\n        breakLength: newBreakLength,\r\n        minutes: newBreakLength,\r\n        seconds: 0,\r\n      });\r\n    } else {\r\n      this.setState({ breakLength: newBreakLength });\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.beepRef.current.load();\r\n    this.setState(this.defaultState());\r\n  };\r\n\r\n  tick = () => {\r\n    if (!this.state.isRunning) return;\r\n\r\n    if (this.state.seconds > 0) {\r\n      this.setState((state) => ({\r\n        seconds: state.seconds - 1,\r\n      }));\r\n    } else if (this.state.minutes > 0) {\r\n      this.setState((state) => ({\r\n        minutes: state.minutes - 1,\r\n        seconds: 59,\r\n      }));\r\n    } else {\r\n      this.beepRef.current.play();\r\n      this.handleBreakTime();\r\n    }\r\n\r\n    setTimeout(this.tick, 1000);\r\n  };\r\n\r\n  handleBreakTime = () => {\r\n    if (this.state.isBreak) {\r\n      this.setState({\r\n        isRunning: true,\r\n        seconds: 0,\r\n        minutes: this.state.sessionLength,\r\n        timerLabel: \"Session\",\r\n        isBreak: false,\r\n      });\r\n    } else {\r\n      this.setState((state) => ({\r\n        isBreak: true,\r\n        timerLabel: \"Break\",\r\n        minutes: state.breakLength,\r\n        seconds: 0,\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleStartStop = () => {\r\n    if (this.state.isRunning) {\r\n      this.setState({\r\n        isRunning: false,\r\n      });\r\n    } else {\r\n      this.setState(\r\n        {\r\n          isRunning: true,\r\n        },\r\n        () => { setTimeout(this.tick, 1000) }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 id=\"timer-label\">{this.state.timerLabel}</h1>\r\n        <Tomato handleStartStop={this.handleStartStop}\r\n          handleReset={this.handleReset}\r\n          minutes={this.state.minutes}\r\n          seconds={this.state.seconds}\r\n        />\r\n        <div className=\"gridClass\">\r\n          <LengthChanger name={\"break\"} className={\"Break-length\"}\r\n            handleDecrement={this.handleBreakDecrement}\r\n            handleIncrement={this.handleBreakIncrement}\r\n            length={this.state.breakLength}\r\n            label={\"Break Length\"}\r\n          />\r\n          <LengthChanger name={\"session\"} className={\"Session-length\"}\r\n            handleDecrement={this.handleSessionDecrement}\r\n            handleIncrement={this.handleSessionIncrement}\r\n            length={this.state.sessionLength}\r\n            label={\"Session Length\"}\r\n          />\r\n        </div>\r\n        <audio\r\n          id=\"beep\"\r\n          ref={this.beepRef}\r\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Session;\r\n","import \"./App.css\";\r\nimport Session from \"./components/Session\";\r\n\r\nfunction App() {\r\n  return <Session />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}